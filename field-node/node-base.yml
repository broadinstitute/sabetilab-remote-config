- hosts: nodes

  environment:
    PLACEHOLDER_VAR: "foobar"

  vars_files:
    - "../settings_field_node.yml"

  vars:
    security_ssh_port: "{{ ssh_port }}"
    system76_machines_to_install_drivers:
      - "Gazelle" # System76 model of laptop

  roles:
    - geerlingguy.security # this will disconnect SSH, and must be run locally

  tasks:
    # Add ansible repository
    - name: "add ansible repository"
      apt_repository:
        repo: ppa:ansible/ansible

    - name: "apt-get update"
      apt: update_cache=yes

    - name: "apt-get upgrade"
      apt: upgrade=dist

    - name: Install build dependencies
      apt: pkg=build-essential state=present

    - name: Install ansible
      apt: pkg=ansible state=present

    - name: Install htop
      apt: pkg=htop state=present

    - name: Install pigz
      apt: pkg=pigz state=present

    - name: Install openssh-server
      apt: pkg=openssh-server state=present

    - name: Install aptitude
      apt: pkg=aptitude state=present

    - name: Install git
      apt: pkg=git state=present

    # If using the dual-NIC expresscard34 card with Realtek 8168
    # - name: Install dual-nic driver
    #   script: ./files/install_r8168_drivers.sh
    #   become: yes

    # - name: Copy in service to renew DHCP lease when expresscard NIC is inserted
    #   template: 
    #     src: "./files/enp12s0_watcher.service.j2"
    #     dest: "/etc/systemd/system/enp12s0_watcher.service"
    #     mode: "0644"
    #   register: enp12s0_service_file

    # - shell: "systemctl daemon-reload && systemctl enable enp12s0_watcher"
    #   when: enp12s0_service_file.changed

    - name: Install tmux
      apt: pkg=tmux state=present

    - name: Install net-tools
      apt: pkg=net-tools state=present

    - name: Install python-dev
      apt: pkg=python-dev state=present

    - name: Install speedtest-cli
      apt: pkg=speedtest-cli state=present

    - name: Install avahi-daemon
      apt: pkg=avahi-daemon state=present

    - name: Install avahi-utils
      apt: pkg=avahi-utils state=present

    - name: download pip installer script
      get_url: 
        url: https://bootstrap.pypa.io/pip/3.6/get-pip.py # for newer py3 systems: https://bootstrap.pypa.io/get-pip.py
        dest: "/opt/get-pip.py"
        mode: "0755"
      register: pip_script_downloaded
    - name: install pip
      command: "python /opt/get-pip.py"
      when: pip_script_downloaded is success

    - name: Create file copy destination on remote
      file: path=/opt/field-node state=directory mode=0755

    - name: Copy python dependency file 
      copy: 
        src: "./files/requirements.txt"
        dest: "/opt/field-node/python-requirements.txt"
        mode: "0744"

    - name: Install python dependencies
      pip: 
        requirements: "/opt/field-node/python-requirements.txt"
        #extra_args: --ignore-installed

    - name: get machine model number
      shell: "dmidecode -s system-product-name"
      register: model_number

    - debug: 
        msg: "Machine identified as {{model_number.stdout}}"

    - name: install System76 package source if they make this computer model
      apt_repository:
        repo: ppa:system76-dev/stable
      when: (model_number.stdout in system76_machines_to_install_drivers)

    - name: install System76 driver if they make this computer model
      apt: pkg=system76-driver state=present
      when: (model_number.stdout in system76_machines_to_install_drivers)

    # - name: Ensure .ssh directory exists.
    #   file: 
    #     dest: "/home/ubuntu/.ssh"
    #     mode: 0700 
    #     owner: ubuntu
    #     state: directory

    # - name: Install deployment ssh key
    #   copy: 
    #     content: "{{ deploy_ssh_private_key }}" 
    #     dest: "/home/ubuntu/.ssh/id_rsa"
    #     mode: 0600
    #     owner: ubuntu

    #- name: setup cron job to call ansible-pull every hour
    #  cron: 
    #    name: "update route53"
    #    minute: "5"
    #    user: ubuntu
    #    job: "ansible-pull -U {{deploy_repo_url}} -i ./production ./field-node/base_playbook.yml"
